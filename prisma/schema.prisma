generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Review {
  id           String     @id @default(uuid())
  rating       Int
  body         String
  golfCourseId String
  golfCourse   GolfCourse @relation(fields: [golfCourseId], references: [id], onDelete: Cascade)
  userId       String
  user         User       @relation(fields: [userId], references: [id])
  images       String[]
  createdAt    DateTime   @default(now())
}

model GolfCourse {
  id          String    @id @default(uuid())
  name        String
  type        String
  description String?
  city        String
  state       String
  ownerId     String
  owner       Owner     @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  reviews     Review[]
  images      String[]
  rates       Rate[]
  teeTimes    TeeTime[]
  user        User[]
}

model User {
  id                  String       @id @default(uuid())
  firstName           String
  lastName            String
  email               String
  password            String
  city                String
  state               String
  isOwner             Boolean      @default(false)
  teeTimesCreated     TeeTime[]
  favoriteGolfCourses GolfCourse[]
  reviews             Review[]
}

model Owner {
  id               String       @id @default(uuid())
  firstName        String
  lastName         String
  email            String
  password         String
  city             String
  state            String
  isOwner          Boolean      @default(true)
  golfCoursesOwned GolfCourse[]
}

model TeeTime {
  id           String     @id @default(uuid())
  golfCourseId String
  golfCourse   GolfCourse @relation(fields: [golfCourseId], references: [id], onDelete: Cascade)
  time         DateTime
  numHoles     Int
  userId       String
  user         User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  players      String[]
}

model Rate {
  id           Int        @id @default(autoincrement())
  price        Float
  type         String
  numHoles     Int
  golfCourse   GolfCourse @relation(fields: [golfCourseId], references: [id], onDelete: Cascade)
  golfCourseId String
}
